<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="8" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Reporter" duration-ms="11521" started-at="2020-05-30T14:36:21Z" finished-at="2020-05-30T14:36:32Z">
    <groups>
      <group name="google">
        <method signature="Script01.test2()[pri:0, instance:tests.Script01@26653222]" name="test2" class="tests.Script01"/>
        <method signature="Script02.test6()[pri:0, instance:tests.Script02@f6c48ac]" name="test6" class="tests.Script02"/>
        <method signature="Script02.test8()[pri:0, instance:tests.Script02@f6c48ac]" name="test8" class="tests.Script02"/>
      </group> <!-- google -->
      <group name="bing">
        <method signature="Script01.test1()[pri:0, instance:tests.Script01@26653222]" name="test1" class="tests.Script01"/>
        <method signature="Script01.test3()[pri:0, instance:tests.Script01@26653222]" name="test3" class="tests.Script01"/>
        <method signature="Script01.test4()[pri:0, instance:tests.Script01@26653222]" name="test4" class="tests.Script01"/>
        <method signature="Script02.test5()[pri:0, instance:tests.Script02@f6c48ac]" name="test5" class="tests.Script02"/>
        <method signature="Script02.test7()[pri:0, instance:tests.Script02@f6c48ac]" name="test7" class="tests.Script02"/>
      </group> <!-- bing -->
    </groups>
    <test name="ReporterTest1" duration-ms="6353" started-at="2020-05-30T14:36:21Z" finished-at="2020-05-30T14:36:27Z">
      <class name="tests.Script01">
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script01@26653222]" name="globalTestSetup" is-config="true" duration-ms="15" started-at="2020-05-30T14:36:21Z" finished-at="2020-05-30T14:36:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="PASS" signature="test1()[pri:0, instance:tests.Script01@26653222]" name="test1" duration-ms="723" started-at="2020-05-30T14:36:21Z" description="This is a bing test." finished-at="2020-05-30T14:36:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script01@26653222]" name="globalTestTeardown" is-config="true" duration-ms="17" started-at="2020-05-30T14:36:22Z" finished-at="2020-05-30T14:36:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=Script01.test1()[pri:0, instance:tests.Script01@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script01@26653222]" name="globalTestSetup" is-config="true" duration-ms="0" started-at="2020-05-30T14:36:22Z" finished-at="2020-05-30T14:36:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="PASS" signature="test2()[pri:0, instance:tests.Script01@26653222]" name="test2" duration-ms="1764" started-at="2020-05-30T14:36:22Z" description="This is a google test." finished-at="2020-05-30T14:36:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script01@26653222]" name="globalTestTeardown" is-config="true" duration-ms="1" started-at="2020-05-30T14:36:23Z" finished-at="2020-05-30T14:36:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=Script01.test2()[pri:0, instance:tests.Script01@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script01@26653222]" name="globalTestSetup" is-config="true" duration-ms="1" started-at="2020-05-30T14:36:23Z" finished-at="2020-05-30T14:36:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="FAIL" signature="test3()[pri:0, instance:tests.Script01@26653222]" name="test3" duration-ms="398" started-at="2020-05-30T14:36:23Z" description="This is again a bing test." finished-at="2020-05-30T14:36:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.Script01.test3(Script01.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script01@26653222]" name="globalTestTeardown" is-config="true" duration-ms="1682" started-at="2020-05-30T14:36:24Z" finished-at="2020-05-30T14:36:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test3()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test3 status=FAILURE method=Script01.test3()[pri:0, instance:tests.Script01@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script01@26653222]" name="globalTestSetup" is-config="true" duration-ms="1" started-at="2020-05-30T14:36:25Z" finished-at="2020-05-30T14:36:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="FAIL" signature="test4()[pri:0, instance:tests.Script01@26653222]" name="test4" duration-ms="1350" started-at="2020-05-30T14:36:25Z" description="This is again a google test." finished-at="2020-05-30T14:36:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.Script01.test4(Script01.java:34)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script01@26653222]" name="globalTestTeardown" is-config="true" duration-ms="365" started-at="2020-05-30T14:36:27Z" finished-at="2020-05-30T14:36:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script01.test4()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test4 status=FAILURE method=Script01.test4()[pri:0, instance:tests.Script01@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
      </class> <!-- tests.Script01 -->
    </test> <!-- ReporterTest1 -->
    <test name="ReporterTest2" duration-ms="5115" started-at="2020-05-30T14:36:27Z" finished-at="2020-05-30T14:36:32Z">
      <class name="tests.Script02">
        <test-method status="PASS" signature="globalSetup()[pri:0, instance:tests.Script02@f6c48ac]" name="globalSetup" is-config="true" duration-ms="6741" started-at="2020-05-30T14:36:14Z" finished-at="2020-05-30T14:36:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalSetup -->
        <test-method status="PASS" signature="test5()[pri:0, instance:tests.Script02@f6c48ac]" name="test5" duration-ms="582" started-at="2020-05-30T14:36:27Z" description="This is a bing test." finished-at="2020-05-30T14:36:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestSetup" is-config="true" duration-ms="0" started-at="2020-05-30T14:36:27Z" finished-at="2020-05-30T14:36:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test5()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestTeardown" is-config="true" duration-ms="3" started-at="2020-05-30T14:36:28Z" finished-at="2020-05-30T14:36:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test5()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test5 status=SUCCESS method=Script02.test5()[pri:0, instance:tests.Script02@f6c48ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestSetup" is-config="true" duration-ms="0" started-at="2020-05-30T14:36:28Z" finished-at="2020-05-30T14:36:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test6()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="PASS" signature="test6()[pri:0, instance:tests.Script02@f6c48ac]" name="test6" duration-ms="1292" started-at="2020-05-30T14:36:28Z" description="This is a google test." finished-at="2020-05-30T14:36:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestTeardown" is-config="true" duration-ms="1" started-at="2020-05-30T14:36:29Z" finished-at="2020-05-30T14:36:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test6()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test6 status=SUCCESS method=Script02.test6()[pri:0, instance:tests.Script02@f6c48ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestSetup" is-config="true" duration-ms="1" started-at="2020-05-30T14:36:29Z" finished-at="2020-05-30T14:36:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test7()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="FAIL" signature="test7()[pri:0, instance:tests.Script02@f6c48ac]" name="test7" duration-ms="695" started-at="2020-05-30T14:36:29Z" description="This is again a bing test." finished-at="2020-05-30T14:36:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.Script02.test7(Script02.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestTeardown" is-config="true" duration-ms="1540" started-at="2020-05-30T14:36:30Z" finished-at="2020-05-30T14:36:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test7()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test7 status=FAILURE method=Script02.test7()[pri:0, instance:tests.Script02@f6c48ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTestSetup(java.lang.reflect.Method)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestSetup" is-config="true" duration-ms="0" started-at="2020-05-30T14:36:31Z" finished-at="2020-05-30T14:36:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test8()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestSetup -->
        <test-method status="PASS" signature="test8()[pri:0, instance:tests.Script02@f6c48ac]" name="test8" duration-ms="984" started-at="2020-05-30T14:36:31Z" description="This is again a google test." finished-at="2020-05-30T14:36:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="globalTestTeardown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:tests.Script02@f6c48ac]" name="globalTestTeardown" is-config="true" duration-ms="1" started-at="2020-05-30T14:36:32Z" finished-at="2020-05-30T14:36:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Script02.test8()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test8 status=SUCCESS method=Script02.test8()[pri:0, instance:tests.Script02@f6c48ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTestTeardown -->
        <test-method status="PASS" signature="globalTeardown()[pri:0, instance:tests.Script02@f6c48ac]" name="globalTeardown" is-config="true" duration-ms="2510" started-at="2020-05-30T14:36:32Z" finished-at="2020-05-30T14:36:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- globalTeardown -->
      </class> <!-- tests.Script02 -->
    </test> <!-- ReporterTest2 -->
  </suite> <!-- Reporter -->
</testng-results>
